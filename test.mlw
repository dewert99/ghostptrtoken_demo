module Id

  use map.Map
  use map.Const
  use int.Int

  function id (m: Map.map int int): Map.map int int

  let rec function lseg (m: Map.map int int) (d: int) (s: int) (e: int) : bool
    requires { d >= 0}
    variant {d}
  =
    if e = s then true else if (d = 0) then false else (lseg m (d - 1) m[s] e && lseg m (d - 1) (s + 1) e)
    
  goal test0: forall m: Map.map int int. forall d s e: int. lseg m d s e -> (lseg (id m[e <- s])[e <- m[e]] d s e)

  goal test1: lseg (const 1) 1 1 1

end
